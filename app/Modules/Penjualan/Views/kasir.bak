<?php $this->extend("layouts/backend"); ?>
<?php $this->section("content"); ?>
<v-row>
    <v-col cols="12" md="6">
        <v-card class="mt-3 pa-2" fill-height elevation="1">
            <v-data-table class="mb-3" :headers="header" :items="keranjang" item-key="id_keranjang" :loading="loading" loading-text="Memuat data, silahkan tunggu...">
                <template v-slot:item="{ item }">
                    <tr>
                        <td width="50">{{item.id_keranjang}}</td>
                        <td>{{item.nama_produk}}</td>
                        <td>
                            <v-edit-dialog :return-value.sync="item.qty" @save="setJumlah(item)" @cancel="" @open="" @close="">
                                {{item.qty}}
                                <template v-slot:input>
                                    <v-text-field v-model="item.qty" type="number" single-line></v-text-field>
                                </template>
                            </v-edit-dialog>
                        </td>
                        <td>Rp.{{item.total}}</td>
                        <td>
                            <v-btn icon @click="hapusItem(item)">
                                <v-icon color="red">
                                    mdi-delete
                                </v-icon>
                            </v-btn>
                        </td>
                    </tr>
                </template>
                <template slot="body.append">
                    <tr>
                        <td>
                            <v-btn color="error" @click="modalDelete = true" :disabled="keranjang == '' ? true:false"><?= lang('App.resetCart') ?></v-btn>
                        </td>
                        <td></td>
                        <td></td>
                        <td class="text-h5">Rp.{{ sumTotal('total') }}</td>
                        <td></td>
                    </tr>     
                </template>  
                <template slot="footer.prepend">
                    <v-btn v-on:click="bayar = 0">0</v-btn>
                    <v-btn v-on:click="bayar += 500">500</v-btn>
                    <v-btn v-on:click="bayar += 1000">1.000</v-btn>
                    <v-btn v-on:click="bayar += 2000">2.000</v-btn>
                    <v-btn v-on:click="bayar += 5000">5.000</v-btn>
                    <v-btn v-on:click="bayar += 10000">10.000</v-btn>
                    <v-btn v-on:click="bayar += 20000">20.000</v-btn>
                    <v-btn v-on:click="bayar += 50000">50.000</v-btn>
                    <v-btn v-on:click="bayar += 100000">100.000</v-btn>
                </template>  
            </v-data-table>
            <v-card-text>
                <v-row>
                    <v-col cols="12" md="3">
                        <v-text-field label="Bayar" v-model="bayar" type="number" :rules="[rules.zero, rules.required, rules.number]" outlined dense></v-text-field>
                    </v-col>
                    <v-col cols="12" md="3">
                        <v-text-field label="Kembali" v-model="kembali" hide-details readonly outlined dense></v-text-field>
                    </v-col>
                    <v-col cols="12" md="3">
                        <v-btn color="primary" block @click="saveNota" :loading="loading2" :disabled="keranjang == '' ? true:false">
                            <v-icon>mdi-cart</v-icon> <?= lang('App.pay') ?>
                        </v-btn>
                    </v-col>
                    <v-col cols="12" md="3">
                        <v-btn :loading="loading3" @click="getItemNota" :disabled="this.idnota == '' ? true:false">
                            <v-icon>mdi-printer</v-icon> <?= lang('App.printReceipt') ?>
                        </v-btn>
                    </v-col>
                </v-row>
            </v-card-text>
        </v-card>
    </v-col>

    <v-col cols="12" md="6">
        <v-card elevation="1">
            <v-card-text>
                <h2 class="mb-4 font-weight-regular">
                    <v-icon>mdi-magnify</v-icon> <?= lang('App.search'); ?>
                </h2>
                <v-text-field v-model="pencarian" label="<?= lang('App.search'); ?>" @change="cariProduk" outlined hide-details clearable></v-text-field>
            </v-card-text>
        </v-card>
        <v-card elevaton="1">
            <v-simple-table dense fixed-header height="130px">
                <template v-slot:default>
                    <thead>
                        <tr>
                            <th>Kode</th>
                            <th>Nama Produk</th>
                            <th>Harga</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="item in produk" :key="item.id_produk">
                            <td width="100">{{item.id_produk}}</td>
                            <td width="200">{{item.nama_produk}}</td>
                            <td width="100">{{item.harga_jual}}</td>
                            <td width="100" align="center">
                                <v-btn color="success" x-small @click="saveKeranjang(item)">
                                    <v-icon small>mdi-cart</v-icon>
                                </v-btn>
                            </td>
                        </tr>
                    </tbody>
                </template>
            </v-simple-table>
        </v-card>
    </v-col>
</v-row>



<!-- Modal Reset Keranjang -->
<template>
    <v-row justify="center">
        <v-dialog v-model="modalDelete" persistent max-width="600px">
            <v-card class="pa-2">
                <v-card-title class="text-h5"><?= lang('App.confirmResetCart') ?></v-card-title>
                <v-card-actions>
                    <v-spacer></v-spacer>
                    <v-btn text @click="modalDelete = false"><?= lang('App.no') ?></v-btn>
                     <v-btn color="danger" dark @click="resetKeranjang" :loading="loading2">
                        <v-icon>mdi-delete</v-icon> <?= lang('App.yes') ?>, <?= lang('App.delete') ?>
                    </v-btn>
                    <v-spacer></v-spacer>
                </v-card-actions>
            </v-card>
        </v-dialog>
    </v-row>
</template>              
<!-- End Modal Reset -->

<!-- Modal Nota -->
<template>
    <v-row justify="center">
        <v-dialog v-model="modalNota" persistent max-width="300px">
            <v-card class="pa-2">
                <v-card-title class="text-h5"><?= lang('App.receipt') ?></v-card-title>
                <v-card-text>
                    <div class="text-center" v-for="item in toko" :key="item.id_toko">
                        <h4>{{item.nama_toko}}</h4>
                        {{item.alamat_toko}} - {{item.telp}}
                    </div>
                    <div>
                        {{nota.no_nota}}<br />
                        <?= date('d/m/Y H:i:s') ?>
                        <span class="float-right"><?= session()->get('user') ?></span>
                    </div>
                    <v-divider></v-divider>

                    <div v-for="item in itemnota" :key="item.id_itemnota">
                        {{item.nama_produk}}<br />
                        {{item.harga}} x {{item.qty}}
                        <span class="float-right">{{item.jumlah}}</span>
                    </div>
                    <v-divider></v-divider>
                    <div>
                        Total: <span class="float-right">{{nota.total}}</span><br />
                        Bayar: <span class="float-right">{{nota.bayar}}</span><br />
                        Kembali: <span class="float-right">{{nota.kembali}}</span><br />
                    </div>
                    <v-divider></v-divider>
                    <div class="text-center">
                        <small class="mb-0">Terima kasih, Barang yang sudah dibeli tidak dapat dikembalikan</small>
                    </div>
                </v-card-text>
                <v-card-actions>
                    <v-spacer></v-spacer>
                    <v-btn text @click="modalNota = false"><?= lang('App.close') ?></v-btn>
                    <v-spacer></v-spacer>
                </v-card-actions>
            </v-card>
        </v-dialog>
    </v-row>
</template>              
<!-- End Modal Nota -->

<v-dialog v-model="loading4" hide-overlay persistent width="300">
    <v-card>
        <v-card-text class="pt-3">
            Memuat, silahkan tunggu...
            <v-progress-linear indeterminate color="primary" class="mb-0"></v-progress-linear>
        </v-card-text>
    </v-card>
</v-dialog>
<?php $this->endSection("content") ?>

<?php $this->section("js") ?> 
<script>
    computedVue = {
        ...computedVue,

    }

    const token = JSON.parse(localStorage.getItem('access_token'));
    const options = {
        headers: {
            "Authorization": `Bearer ${token}`,
            "Content-Type": "application/json"
        }
    }

    dataVue = {
        ...dataVue,
        group: null,
        pencarian: null,
        produk: [],
        id_produk: "",
        qty: 0,
        total: 0,
        bayar: 0,
        kembali: 0,
        toko: [],
        id_keranjang: "",
        keranjang: [],
        itemkeranjang: [],
        idnota: "",
        nota: [],
        itemnota: [],
        header: [{
                text: 'ID',
                value: 'id_keranjang'
            },
            {
                text: 'Nama',
                value: 'nama_produk'
            },
            {
                text: 'Qty',
                value: 'qty'
            },
            {
                text: 'Total',
                value: 'total'
            },
            {
                text: '',
                value: 'actions'
            },
        ],
        modalAdd: false,
        modalEdit: false,
        modalShow: false,
        modalDelete: false,
        modalNota: false,
    }
    createdVue = function() {
        setTimeout(() => this.getKeranjang(), 1000);
    }

    watchVue = {
        ...watchVue,
        bayar: function() {
            this.kembali = this.bayar - this.total;
        },
    }

    mountedVue = function() {}

    methodsVue = {
        ...methodsVue,
        modalAddOpen: function() {
            this.modalAdd = true;
        },
        modalAddClose: function() {
            this.modalAdd = false;
            this.$refs.form.resetValidation();
        },
        // Search Produk
        cariProduk: function() {
            this.getProduk();
        },
        // Get Produk
        getProduk: function() {
            this.loading4 = true;
            axios.get(`/api/cari_produk?query=${this.pencarian}`, options)
                .then(res => {
                    // handle success
                    this.loading4 = false;
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.produk = data.data;
                    } else {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        this.produk = data.data;
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
        // Get Keranjang
        getKeranjang: function() {
            this.loading = true;
            axios.get(`/api/keranjang`, options)
                .then(res => {
                    // handle success
                    this.loading = false;
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.keranjang = data.data;
                        const itemkeranjang = this.keranjang.map((row) => (
                            [row.id_produk, row.harga, row.stok, row.qty]
                        ));
                        this.itemkeranjang = itemkeranjang;
                        //console.log(this.itemkeranjang);
                    } else {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        this.keranjang = data.data;
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
        // Save Keranjang
        saveKeranjang: function(item) {
            this.loading4 = true;
            axios.post(`/api/keranjang/save`, {
                    id_produk: item.id_produk,
                    harga: item.harga_jual,
                    stok: item.stok,
                    qty: 1,
                    id_member: 1,
                }, options)
                .then(res => {
                    // handle success
                    this.loading4 = false
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.getKeranjang();
                    } else {
                        this.notifType = "error";
                        this.notifMessage = data.message;
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
        // Reset Keranjang
        resetKeranjang: function() {
            this.loading = true;
            axios.delete(`/api/keranjang/reset`, options)
                .then(res => {
                    // handle success
                    this.loading = false;
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.getKeranjang();
                        this.modalDelete = false;
                    } else {
                        this.snackbar = true;
                        //this.snackbarType = "error";
                        this.snackbarMessage = data.message;
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
        // Delete Item Keranjang
        hapusItem: function(item) {
            this.loading = true;
            axios.delete(`/api/keranjang/delete/${item.id_keranjang}`, options)
                .then(res => {
                    // handle success
                    this.loading = false;
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.getKeranjang();
                    } else {
                        this.snackbar = true;
                        //this.snackbarType = "error";
                        this.snackbarMessage = data.message;
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
        sumTotal(key) {
            // sum data in give key (property)
            let total = 0
            const sum = this.keranjang.reduce((accumulator, currentValue) => {
                return (total += +currentValue[key])
            }, 0)
            this.total = sum;
            return sum
        },
        // Set Jumlah Item
        setJumlah: function(item) {
            this.loading = true;
            this.id_keranjang = item.id_keranjang;
            this.qty = item.qty;
            this.id_produk = item.id_produk;
            axios.put(`/api/keranjang/update/${this.id_keranjang}`, {
                    id_produk: this.id_produk,
                    qty: this.qty,
                }, options)
                .then(res => {
                    // handle success
                    this.loading = false;
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.getKeranjang();
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
        // Save Nota
        saveNota: function(item) {
            this.loading2 = true;
            const data = this.itemkeranjang;
            //console.log(data);
            axios.post(`/api/nota/save`, {
                    data: data,
                    bayar: this.bayar,
                    total: this.total,
                    kembali: this.kembali
                }, options)
                .then(res => {
                    // handle success
                    this.loading2 = false
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.resetKeranjang();
                        this.idnota = data.data.idnota;
                        this.getItemNota();
                    } else {
                        this.notifType = "error";
                        this.notifMessage = data.message;
                        this.snackbar = true;
                        //this.snackbarType = "error";
                        this.snackbarMessage = data.message;
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
        //Get Toko
        getToko: function() {
            axios.get(`/api/toko`, options)
                .then(res => {
                    // handle success
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.toko = data.data;
                    } else {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
        //Get Nota
        getNota: function() {
            this.loading3 = true;
            axios.get(`/api/nota/${this.idnota}`, options)
                .then(res => {
                    // handle success
                    this.loading3 = false;
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.nota = data.data;
                        this.getToko();
                    } else {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
        //Get Item Nota
        getItemNota: function() {
            this.loading3 = true;
            axios.get(`/api/cetaknota/${this.idnota}`, options)
                .then(res => {
                    // handle success
                    this.loading3 = false;
                    var data = res.data;
                    if (data.expired == true) {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                        setTimeout(() => window.location.href = data.data.url, 1000);
                    }
                    if (data.status == true) {
                        this.snackbar = true;
                        //this.snackbarType = "success";
                        this.snackbarMessage = data.message;
                        this.itemnota = data.data;
                        this.modalNota = true;
                        this.getNota();
                    } else {
                        this.snackbar = true;
                        //this.snackbarType = "warning";
                        this.snackbarMessage = data.message;
                    }
                })
                .catch(err => {
                    // handle error
                    console.log(err);
                })
        },
    }
</script>
<?php $this->endSection("js") ?>